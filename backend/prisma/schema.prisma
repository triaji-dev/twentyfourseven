generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects    Project[]
  timeEntries TimeEntry[]
  takeaways   Takeaway[]
  goals       Goal[]
}

model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  color       String
  description String?
  createdAt   DateTime @default(now())

  projects    Project[]
  timeEntries TimeEntry[]
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  userId      String
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category    @relation(fields: [categoryId], references: [id])
  timeEntries TimeEntry[]
}

model TimeEntry {
  id         String    @id @default(uuid())
  userId     String
  projectId  String?
  categoryId String
  startTime  DateTime
  endTime    DateTime?
  duration   Int?      // in seconds
  notes      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  project  Project?  @relation(fields: [projectId], references: [id], onDelete: SetNull)
  category Category  @relation(fields: [categoryId], references: [id])

  @@index([userId, startTime])
  @@index([categoryId])
}

model Takeaway {
  id        String   @id @default(uuid())
  userId    String
  content   String
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, date])
}

model Goal {
  id          String   @id @default(uuid())
  userId      String
  title       String
  description String?
  targetHours Float
  deadline    DateTime?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
